def MetadataObjectForURL(url):
	
	Log("Here we go URL Service for ATV plugin with URL: " + url)
	urlcomponents = url.split('/')
	newurl = "http://atv.at/getclip/" + urlcomponents[len(urlcomponents)-1]
	#Request the URL
	Log("Neue URL: " + newurl)
	json = JSON.ObjectFromURL(newurl)
	#Log(page['clip']['video'])
	#Log(JSON.StringFromObject(page))

	return MovieObject(
        title = "test",
        #title = json['clip']['title'],
        summary = json['clip']['description'],
        thumb = json['clip']['thumbnail_small'],
	art = json['clip']['image_url'],
        duration = json['clip']['duration']*1000
	)

####################################################################################################
def MediaObjectsForURL(url):

    Log("Arrived at MediaObjectsForURL() with URL: " + url)
    urlcomponents = url.split('/')
    json = JSON.ObjectFromURL(url)
    urls = [] 
    Log(urlcomponents[len(urlcomponents)-1])
    for item in json['1'][int(urlcomponents[len(urlcomponents)-1])]['parts']:
	urls.append(item['url'])

    return [
        MediaObject(
	    container = Container.MP4,
	    video_codec = VideoCodec.H264,
	    audio_codec = AudioCodec.AAC,
	    audio_channels = 2,
	    bitrate = 1000,
	    optimized_for_streaming = True,
	    parts = [
	        PartObject(key=urls[0]),
	        PartObject(key=urls[1]),
	        PartObject(key=urls[2])
	    ]
        )
    ]

####################################################################################################
